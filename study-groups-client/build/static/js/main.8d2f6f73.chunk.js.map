{"version":3,"sources":["assets/logo-white.svg","assets/map.png","assets/logo.svg","modules sync /containers/.js$","ui/Container.js","ui/NavBar.js","modules/group/screens/GroupCard.js","modules/universities/resources.js","modules/universities/container.js","modules/group/resources.js","modules/group/container.js","modules/group/screens/Search.js","modules/group/screens/List.js","modules/user/resources.js","modules/user/container.js","modules/group/screens/Create.js","modules/group/screens/Details.js","modules/user/screens/Login.js","modules/user/screens/Profile.js","App.js","serviceWorker.js","containers.js","index.js"],"names":["module","exports","__webpack_require__","p","webpackEmptyContext","req","e","Error","code","keys","resolve","id","Container","props","react_default","a","createElement","lib_default","Object","assign","marginX","maxWidth","NavBar","_ref","history","Pane","backgroundColor","height","width","ui_Container","alignItems","display","justifyContent","Heading","color","fontSize","style","marginRight","src","require","alt","Link","to","Popover","content","Menu","Group","Item","icon","onSelect","push","Divider","intent","position","Position","BOTTOM_RIGHT","Avatar","name","size","Card","styled","div","_templateObject","GroupCard","group","concat","elevation","marginBottom","title","Pill","participants","length","limit","map","_","i","Paragraph","description","Icon","Text","formatDistance","Date","datetime","locale","es","location","resources","axios","then","result","data","UniversityContainer","state","list","api","this","setState","group_resources","search","university","assignment","resp","fetch","create","url","method","update","GroupContainer","selected","syncing","_callee","regenerator_default","wrap","_context","prev","next","sent","_this","stop","_callee2","profile","_context2","join","_callee3","user","_context3","_ref4","objectSpread","toConsumableArray","leave","_callee4","_context4","_ref6","filter","userId","_ref7","Search","handleUniversityChange","prevState","handleAssignmentChange","groupContainer","slicedToArray","containers","_this$props$container2","universityContainer","_this$state","universities","assignments","find","u","background","paddingY","Combobox","items","placeholder","selectedItem","onChange","currentGroup","screens_GroupCard","Component","connect","ListScreen","unstated_es","console","log","user_resources","email","password","res","UserContainer","persist","localStorage","setItem","JSON","stringify","session","getItem","parse","login","_ref$containers","appearance","padding","marginY","react_local_form_min","render","_ref2","values","errors","selectedUniversity","_university","rules","value","validate","TextInputField","required","label","type","SelectField","disabled","key","Button","Boolean","isLoading","onSubmit","asyncToGenerator","mark","_ref3","toaster","success","_x","apply","arguments","Wrapper","section","Details_templateObject","DetailsScreen","joined","isJoined","_this$props$container","some","participant","joinGroup","_this$props","match","closeAll","notify","params","groupData","_React$createElement","date","distance","float","minHeight","margin","defineProperty","className","onClick","toLocaleString","class","Login_templateObject","Section","_templateObject2","Form","form","_templateObject3","Presentation","_templateObject4","LoginScreen","preventDefault","replace","_this2","_this$state2","Login_Container","TextInput","target","ProfileScreen","App","restore","BrowserRouter","Switch","Route","component","Login","path","ui_NavBar","exact","List","Create","Details","Profile","Redirect","window","hostname","ctx","requireAll","m","default","ReactDOM","inject","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d2f6f73.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-white.d568dca5.svg\";","module.exports = __webpack_public_path__ + \"static/media/map.c699099e.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.b99a43ef.svg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 209;","import React from \"react\";\r\nimport Box from \"ui-box\";\r\n\r\nconst Container = props => <Box marginX=\"auto\" maxWidth=\"960px\" {...props} />;\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport {Pane, Heading, Avatar, Popover, Position, Menu} from \"evergreen-ui\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Container from \"./Container\";\r\n\r\nconst NavBar = ({history}) => (\r\n  <Pane backgroundColor=\"#111c27\" height=\"70px\" width=\"100%\">\r\n    <Container height=\"100%\">\r\n      <Pane\r\n        alignItems=\"center\"\r\n        display=\"flex\"\r\n        height=\"100%\"\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <Heading alignItems='center' display='flex' color=\"white\" fontSize=\"30px\">\r\n          <img style={{\r\n            height: '25px',\r\n            marginRight: '10px'\r\n          }} src={require('../assets/logo-white.svg')} alt=\"\"/>\r\n          <Link to=\"/groups\">Stoodi</Link>\r\n        </Heading>\r\n        <Pane alignItems=\"center\" display=\"flex\">\r\n          <Popover\r\n            content={\r\n              <Menu>\r\n                <Menu.Group>\r\n                  <Menu.Item\r\n                    icon=\"plus\"\r\n                    onSelect={() => {\r\n                      history.push(\"/groups/create\");\r\n                    }}\r\n                  >\r\n                    Agregar grupo\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    icon=\"list\"\r\n                    onSelect={() => {\r\n                      history.push(\"/my-groups\");\r\n                    }}\r\n                  >\r\n                    Mis grupos\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    icon=\"user\"\r\n                    onSelect={() => {\r\n                      history.push(\"/profile\");\r\n                    }}\r\n                  >\r\n                    Perfil\r\n                  </Menu.Item>\r\n                </Menu.Group>\r\n                <Menu.Divider />\r\n                <Menu.Group>\r\n                  <Menu.Item\r\n                    icon=\"cross\"\r\n                    intent=\"danger\"\r\n                    onSelect={() => {\r\n                      history.push(\"/login\");\r\n                    }}\r\n                  >\r\n                    Salir\r\n                  </Menu.Item>\r\n                </Menu.Group>\r\n              </Menu>\r\n            }\r\n            position={Position.BOTTOM_RIGHT}\r\n          >\r\n            <Avatar\r\n              name=\"\"\r\n              size={30}\r\n              src=\"https://pbs.twimg.com/profile_images/756196362576723968/6GUgJG4L_400x400.jpg\"\r\n            />\r\n          </Popover>\r\n        </Pane>\r\n      </Pane>\r\n    </Container>\r\n  </Pane>\r\n);\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Pane, Heading, Avatar, Pill, Paragraph, Text, Icon} from \"evergreen-ui\";\r\n\r\nimport {formatDistance} from \"date-fns\";\r\nimport {es} from \"date-fns/locale\";\r\n\r\nconst Card = styled.div`\r\n  min-width: 800px;\r\n  margin-bottom: 2em;\r\n  padding: 1em;\r\n  background: #f7f7f7;\r\n  border: 1px solid #dcdcdc;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  -webkit-box-shadow: 2px 3px 28px -6px rgba(0, 0, 0, 0.75);\r\n  -moz-box-shadow: 2px 3px 28px -6px rgba(0, 0, 0, 0.75);\r\n  box-shadow: 2px 3px 28px -6px rgba(0, 0, 0, 0.75);\r\n  transition: 0.3s ease-in-out;\r\n  &:hover {\r\n    box-shadow: 5px 8px 20px 0px rgba(0, 0, 0, 0.42);\r\n  }\r\n  header {\r\n    border-bottom: 1px solid #b5b5b5;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    .nameandlimit {\r\n      width: 99%;\r\n      font-size: 16px;\r\n      margin: 0 auto;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n  section {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    .title {\r\n      color: #2b2020;\r\n      font-size: 14px;\r\n    }\r\n    p {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n  }\r\n`;\r\n\r\nconst GroupCard = ({group}) => (\r\n  <Link to={`/groups/${group.id}`}>\r\n    <Card elevation={1}>\r\n      <Pane\r\n        alignItems=\"center\"\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        marginBottom=\"8px\"\r\n      >\r\n        <Heading size=\"800\">{group.title}</Heading>\r\n        <Pane alignItems=\"center\" display=\"flex\">\r\n          <Pill display=\"inline-flex\" marginRight={16}>\r\n            {group.participants.length}/{group.limit}\r\n          </Pill>\r\n          {group.participants.map((_, i) => (\r\n            <Avatar\r\n              size={40}\r\n              src={`https://randomuser.me/api/portraits/women/${i + 1}.jpg`}\r\n            />\r\n          ))}\r\n        </Pane>\r\n      </Pane>\r\n      <Paragraph marginBottom=\"24px\" size={400}>\r\n        {group.description}\r\n      </Paragraph>\r\n      <Pane alignItems=\"center\" display=\"flex\" justifyContent=\"space-between\">\r\n        <Pane alignItems=\"center\" display=\"flex\">\r\n          <Icon icon=\"time\" marginRight=\"6px\" />\r\n          <Text size={400}>\r\n            {\"en\"}{\" \"}\r\n            {formatDistance(new Date(), new Date(group.datetime), {\r\n              locale: es,\r\n            })}\r\n          </Text>\r\n        </Pane>\r\n        <Pane alignItems=\"center\" display=\"flex\">\r\n          <Icon icon=\"geolocation\" marginRight=\"6px\" />\r\n          <Text size={400}>{group.location}</Text>\r\n        </Pane>\r\n      </Pane>\r\n    </Card>\r\n  </Link>\r\n);\r\n\r\nexport default GroupCard;\r\n","import axios from \"axios\";\r\n\r\nconst URL = \"/api/universities\";\r\n\r\nexport default {\r\n  fetch: () => axios(URL).then(result => result.data),\r\n};\r\n","import {Container} from \"unstated\";\r\n\r\nimport api from \"./resources\";\r\n\r\nexport default class UniversityContainer extends Container {\r\n  state = {\r\n    list: [],\r\n  };\r\n\r\n  async fetch() {\r\n    const list = await api.fetch();\r\n    this.setState({list});\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst URL = \"/api/groups\";\r\n\r\nexport default {\r\n  search: (university, assignment) =>\r\n    axios(\r\n      `${URL}?university_like=${university}&assignment_like=${assignment}`\r\n    ).then(resp => resp.data),\r\n  fetch: id => axios(`${URL}/${id}`).then(resp => resp.data),\r\n  create: data =>\r\n    axios({\r\n      data,\r\n      url: URL,\r\n      method: \"POST\",\r\n    }).then(resp => resp.data),\r\n  update: data =>\r\n    axios({\r\n      data,\r\n      url: URL,\r\n      method: \"PATCH\",\r\n    }),\r\n};\r\n","import {Container} from \"unstated\";\r\n\r\nimport api from \"./resources\";\r\n\r\nexport default class GroupContainer extends Container {\r\n  state = {\r\n    list: [],\r\n    selected: null,\r\n    syncing: false,\r\n  };\r\n\r\n  search = async (university, assignment) => {\r\n    const list = await api.search(university, assignment);\r\n    this.setState({list});\r\n  };\r\n\r\n  async fetch(id) {\r\n    const selected = await api.fetch(id);\r\n\r\n    this.setState({selected});\r\n  }\r\n\r\n  async create(data) {\r\n    this.setState({syncing: true});\r\n\r\n    const group = await api.create(data);\r\n\r\n    this.setState(({list}) => ({\r\n      list: list.concat(group),\r\n      selected: group,\r\n      syncing: false,\r\n    }));\r\n\r\n    return group;\r\n  }\r\n\r\n  update = async data => {\r\n    const profile = await api.update(data);\r\n\r\n    this.setState({profile});\r\n  };\r\n\r\n  join = async (user) => {\r\n    this.setState(({selected}) => ({\r\n      selected: {\r\n        ...selected,\r\n        participants: [\r\n          ...selected.participants,\r\n          user.id\r\n        ]\r\n      }\r\n    }))\r\n  }\r\n\r\n  leave = async (id) => {\r\n    this.setState(({selected}) => ({\r\n      selected: {\r\n        ...selected,\r\n        participants: selected.participants.filter(userId => userId !== id)\r\n      }\r\n    }))\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {Combobox, Pane, Text} from \"evergreen-ui\";\r\nimport connect from \"unstated-connect\";\r\nimport GroupCard from \"./GroupCard\";\r\nimport Container from \"../../../ui/Container\";\r\nimport UniversityContainer from \"../../universities/container\";\r\nimport GroupContainer from \"../container\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    university: \"\",\r\n    assignment: \"\",\r\n  };\r\n\r\n  handleUniversityChange = university => {\r\n    this.setState(prevState => ({\r\n      university,\r\n      assignment:\r\n        university !== prevState.university ? \"\" : prevState.assignment,\r\n    }));\r\n  };\r\n\r\n  handleAssignmentChange = assignment => {\r\n    const {university} = this.state;\r\n    const {\r\n      containers: [, groupContainer],\r\n    } = this.props;\r\n\r\n    this.setState({\r\n      assignment,\r\n    });\r\n    groupContainer.search(university, assignment);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      containers: [universityContainer, groupContainer],\r\n    } = this.props;\r\n    const {university, assignment} = this.state;\r\n\r\n    const universities = universityContainer.state.list;\r\n    const assignments = university\r\n      ? universities.find(u => u.id === university).assignments\r\n      : [];\r\n\r\n    return (\r\n      <Pane width=\"100%\">\r\n        <Pane background=\"#192a3a\" paddingY=\"30px\">\r\n          <Container>\r\n            <Pane display=\"flex\" justifyContent=\"center\">\r\n              <Combobox\r\n                height={40}\r\n                items={universities.map(u => u.id)}\r\n                placeholder=\"Universidad\"\r\n                selectedItem={university}\r\n                onChange={this.handleUniversityChange}\r\n              />\r\n              <Pane width=\"20px\" />\r\n              <Combobox\r\n                height={40}\r\n                items={assignments}\r\n                placeholder=\"Materia\"\r\n                selectedItem={assignment}\r\n                onChange={this.handleAssignmentChange}\r\n              />\r\n            </Pane>\r\n          </Container>\r\n        </Pane>\r\n        <Pane>\r\n          <Container>\r\n            <Pane paddingY=\"30px\">\r\n              {/* eslint-disable-next-line no-nested-ternary */}\r\n              {!university || !assignment ? (\r\n                <Text color=\"white\">\r\n                  Seleccione una universidad y materia para buscar.\r\n                </Text>\r\n              ) : groupContainer.state.list.length === 0 ? (\r\n                <Text color=\"white\">No hay resultados para tu busqueda.</Text>\r\n              ) : (\r\n                groupContainer.state.list.map(currentGroup => (\r\n                  <GroupCard group={currentGroup} />\r\n                ))\r\n              )}\r\n            </Pane>\r\n          </Container>\r\n        </Pane>\r\n      </Pane>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect([UniversityContainer, GroupContainer])(Search);\r\n","import React from \"react\";\r\nimport {Subscribe} from \"unstated\";\r\n\r\nimport GroupContainer from \"../container\";\r\n\r\nconst ListScreen = () => (\r\n  <Subscribe to={[GroupContainer]}>\r\n    {group => {\r\n      console.log(\"group: \", group);\r\n\r\n      return <div>{`<ListScreen />`}</div>;\r\n    }}\r\n  </Subscribe>\r\n);\r\n\r\nexport default ListScreen;\r\n","import axios from \"axios\";\r\n\r\nconst URL = \"/api/users\";\r\n\r\nexport default {\r\n  login: ({email, password}) =>\r\n    axios(`${URL}?password_like=${password}&email_like=${email}`).then(res => res.data[0]),\r\n  update: data =>\r\n    axios({\r\n      data,\r\n      url: URL,\r\n      method: \"PATCH\",\r\n    }),\r\n};\r\n","import {Container} from \"unstated\";\r\n\r\nimport api from \"./resources\";\r\n\r\nexport default class UserContainer extends Container {\r\n  state = {\r\n    profile: {},\r\n  };\r\n\r\n  async login({email, password}) {\r\n    const profile = await api.login({email, password});\r\n\r\n    this.setState({profile});\r\n    this.persist(profile);\r\n  }\r\n\r\n   restore() {\r\n    const session = localStorage.getItem(\"session\");\r\n\r\n    if (session) {\r\n      console.log(session)\r\n\r\n      const user = JSON.parse(session);\r\n      this.login(user);\r\n    }\r\n  }\r\n\r\n  persist = user => {\r\n    user && localStorage.setItem(\"session\", JSON.stringify(user));\r\n  };\r\n\r\n  async update(data) {\r\n    const profile = await api.update(data);\r\n\r\n    this.setState({profile});\r\n  }\r\n}\r\n","// @flow\r\n\r\nimport type {Container} from \"unstated\";\r\n\r\nimport React from \"react\";\r\nimport {\r\n  Pane,\r\n  Button,\r\n  Heading,\r\n  TextInputField,\r\n  SelectField,\r\n  toaster,\r\n} from \"evergreen-ui\";\r\nimport {Form, FormItem} from \"react-local-form\";\r\nimport connect from \"unstated-connect\";\r\nimport Wrapper from \"../../../ui/Container\";\r\n\r\nimport UniversityContainer from \"../../universities/container\";\r\nimport UserContainer from \"../../user/container\";\r\nimport GroupContainer from \"../container\";\r\n\r\ntype Props = {\r\n  containers: Array<Container>,\r\n  history: any,\r\n};\r\n\r\nconst CreateScreen = ({\r\n  containers: [university, group, user],\r\n  history,\r\n}: Props) => (\r\n  <Pane appearance=\"tint1\" height=\"100%\" padding={24} width=\"100%\">\r\n    <Wrapper>\r\n      <Heading color=\"white\" marginY=\"24px\" size={900}>\r\n        Crear grupo\r\n      </Heading>\r\n      <Form\r\n        render={({values, errors}) => {\r\n          const universities = university.state.list;\r\n          const selectedUniversity = universities.find(\r\n            _university => _university.id === values.university\r\n          );\r\n\r\n          return (\r\n            <Pane backgroundColor=\"white\" elevation={1} padding={24}>\r\n              <FormItem\r\n                name=\"title\"\r\n                rules={[value => !value && \"Este campo es requerido\"]}\r\n                validate={[\"mount\", \"change\"]}\r\n              >\r\n                <TextInputField required label=\"Título\" />\r\n              </FormItem>\r\n              <FormItem name=\"description\" validate={[\"mount\", \"change\"]}>\r\n                <TextInputField label=\"Descripción\" type=\"text\" />\r\n              </FormItem>\r\n              <FormItem\r\n                name=\"limit\"\r\n                rules={[value => !value && \"Este campo es requerido\"]}\r\n                validate={[\"mount\", \"change\"]}\r\n              >\r\n                <TextInputField required label=\"Plazas\" type=\"number\" />\r\n              </FormItem>\r\n              <FormItem\r\n                name=\"location\"\r\n                rules={[value => !value && \"Este campo es requerido\"]}\r\n                validate={[\"mount\", \"change\"]}\r\n              >\r\n                <TextInputField required label=\"Ubicación\" />\r\n              </FormItem>\r\n              <FormItem\r\n                name=\"datetime\"\r\n                rules={[value => !value && \"Este campo es requerido\"]}\r\n                validate={[\"mount\", \"change\"]}\r\n              >\r\n                <TextInputField\r\n                  required\r\n                  label=\"Horario\"\r\n                  type=\"datetime-local\"\r\n                />\r\n              </FormItem>\r\n              <FormItem\r\n                name=\"university\"\r\n                rules={[value => !value && \"Este campo es requerido\"]}\r\n                validate={[\"mount\", \"change\"]}\r\n              >\r\n                <SelectField required label=\"Universidad\">\r\n                  <option disabled value=\"\">\r\n                    Seleccione una universidad\r\n                  </option>\r\n                  {universities.map(_university => (\r\n                    <option key={_university.id} value={_university.id}>\r\n                      {_university.id}\r\n                    </option>\r\n                  ))}\r\n                </SelectField>\r\n              </FormItem>\r\n              {selectedUniversity && (\r\n                <FormItem\r\n                  name=\"assignment\"\r\n                  rules={[value => !value && \"Este campo es requerido\"]}\r\n                  validate={[\"mount\", \"change\"]}\r\n                >\r\n                  <SelectField required label=\"Materia\">\r\n                    <option disabled value=\"\">\r\n                      Seleccione una universidad\r\n                    </option>\r\n                    {selectedUniversity.assignments.map(assignment => (\r\n                      <option key={assignment} value={assignment}>\r\n                        {assignment}\r\n                      </option>\r\n                    ))}\r\n                  </SelectField>\r\n                </FormItem>\r\n              )}\r\n              <Button\r\n                disabled={Boolean(errors.length)}\r\n                isLoading={group.state.syncing}\r\n                type=\"submit\"\r\n              >\r\n                Crear\r\n              </Button>\r\n            </Pane>\r\n          );\r\n        }}\r\n        values={{\r\n          university: \"\",\r\n          assignment: \"\",\r\n          participants: [user.state.profile],\r\n        }}\r\n        onSubmit={async ({values}) => {\r\n          const data = await group.create(values);\r\n\r\n          toaster.success(\"Tu grupo fue creado\");\r\n\r\n          history.push(`/groups/${data.id}`);\r\n        }}\r\n      />\r\n    </Wrapper>\r\n  </Pane>\r\n);\r\n\r\nexport default connect([UniversityContainer, GroupContainer, UserContainer])(\r\n  CreateScreen\r\n);\r\n","/* eslint-disable */\r\nimport type {Container} from \"unstated\";\r\n\r\nimport React, {Component} from \"react\";\r\nimport connect from \"unstated-connect\";\r\n\r\nimport styled from \"styled-components\";\r\nimport {Pane, Text, Button, toaster} from \"evergreen-ui\";\r\nimport GroupContainer from \"../container\";\r\nimport UserContainer from \"../../user/container\";\r\n\r\nimport { formatDistance, format } from 'date-fns'\r\nimport {es} from 'date-fns/locale'\r\n\r\ntype Props = {\r\n  containers: Array<Container>,\r\n};\r\n\r\nconst Wrapper = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  padding-top: 24px;\r\n  .side-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    height: 120%;\r\n    margin-top: -100px;\r\n    max-width: 210px;\r\n    .university-image {\r\n      width: 185px;\r\n      height: 185px;\r\n      border-radius: 100%;\r\n      margin-bottom: 20px;\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: contain;\r\n        border-radius: 100%;\r\n      }\r\n    }\r\n    button {\r\n      width: 80%;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 50px;\r\n      font-weight: bold;\r\n      font-size: 16px;\r\n      letter-spacing: 1.22px;\r\n      text-align: center;\r\n      text-transform: uppercase;\r\n    }\r\n    .participants {\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: flex-start;\r\n      width: 100%;\r\n      margin-top: 7px;\r\n      height: 30px;\r\n      .participant {\r\n        width: 30px;\r\n        height: 30px;\r\n        border-radius: 15px;\r\n        background: #c5bdbd;\r\n        margin: 0 5px;\r\n        animation: fadeIn 0.3s;\r\n        @keyframes fadeIn {\r\n          from {\r\n            opacity: 0;\r\n            transform: translateY(10px);\r\n          }\r\n          to {\r\n            opacity: 1;\r\n            transform: translateY(0px);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .lugar-title {\r\n      display: block;\r\n      margin-top: 20px;\r\n    }\r\n    p {\r\n      font-size: 16px;\r\n      color: #000000;\r\n      letter-spacing: 0.42px;\r\n      text-align: center;\r\n      line-height: 22px;\r\n      font-weight: bold;\r\n      margin-top: 0;\r\n    }\r\n  }\r\n  .main-content {\r\n    margin-left: 55px;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n    h1 {\r\n      margin: 0;\r\n      font-weight: normal;\r\n      font-size: 2rem;\r\n    }\r\n    span.sub-text {\r\n      margin-bottom: 17px;\r\n    }\r\n    p {\r\n      margin-top: 0;\r\n      font-size: 16px;\r\n      color: #000000;\r\n      letter-spacing: 0.42px;\r\n      line-height: 22px;\r\n    }\r\n    .map {\r\n      width: 100%;\r\n      height: 209px;\r\n      margin-top: 20px;\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n      }\r\n    }\r\n  }\r\n  .sub-text {\r\n    opacity: 0.52;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n    color: #000000;\r\n    letter-spacing: 0.42px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst defaultDescription =\r\n  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sapien mauris, dapibus eu efficitur et, pharetra eget mauris. Pellentesque condimentum, arcu nec gravida pellentesque, nibh dolor scelerisque massa, ut ullamcorper lectus magna vel sapien.\";\r\n\r\nclass DetailsScreen extends Component {\r\n  props: Props;\r\n\r\n  state = {\r\n    joined: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      containers: [group],\r\n      match,\r\n    } = this.props;\r\n    await group.fetch(match.params.id);\r\n    console.log(\"test\", this.props.containers[1]);\r\n    // TODO: traer data de los participantes\r\n  }\r\n\r\n  isJoined = () => {\r\n    const {\r\n      containers: [group, user]\r\n    } = this.props\r\n    return group.state.selected.participants.some(participant => participant === user.state.profile.id)\r\n  }\r\n\r\n  joinGroup = () => {\r\n    const {\r\n      containers: [group, user],\r\n      match,\r\n    } = this.props;\r\n\r\n    toaster.closeAll()\r\n    const groupId = group.state.selected.id\r\n\r\n    console.log('isJoined', this.isJoined())\r\n\r\n    if (!this.isJoined()) {\r\n      console.log('lets join')\r\n      group.join(user.state.profile)\r\n      toaster.success('Te uniste a este grupo de estudio con éxito')\r\n    } else {\r\n      console.log('chau')\r\n      group.leave(user.state.profile.id)\r\n      toaster.notify('Saliste del grupo')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      containers: [group],\r\n    } = this.props;\r\n    const groupData = group.state.selected;\r\n    if (groupData) {\r\n      const {limit, participants, title, assignment, description, datetime} = groupData;\r\n      const date = new Date(datetime)\r\n      const distance = formatDistance(new Date(), date, { locale: es })\r\n      const joined = this.state.joined;\r\n      return (\r\n        <Wrapper>\r\n          <Pane\r\n            elevation={1}\r\n            float=\"left\"\r\n            width='80%'\r\n            maxWidth={764}\r\n            minHeight={515}\r\n            padding={42}\r\n            margin={24}\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"flex-start\"\r\n            display=\"flex\"\r\n            elevation={1}\r\n            flexDirection=\"row\"\r\n            background='#fafafa'\r\n            borderRadius={6}\r\n          >\r\n            <div className=\"side-info\">\r\n              <div className=\"university-image\">\r\n                <img\r\n                  alt=\"UBA\"\r\n                  src=\"https://www.dc.uba.ar/Trash/eventos/icpc/2009/images/uba_logo.jpg\"\r\n                />\r\n              </div>\r\n              <Button onClick={this.joinGroup}\r\n                      appearance={!this.isJoined() && 'primary'}\r\n                      intent={!this.isJoined() ? 'success' : 'danger'}\r\n                      marginBottom={20}\r\n              >\r\n                {!this.isJoined() ? \"Unirse\" : \"Salir\"}\r\n              </Button>\r\n              <span className=\"sub-text\">\r\n                QUEDAN {limit - participants.length} LUGARES\r\n              </span>\r\n              <div className=\"participants\">\r\n                {participants.map(participant => (\r\n                  <div key={participant} className=\"participant\" />\r\n                ))}\r\n              </div>\r\n              <span className=\"sub-text lugar-title\">LUGAR Y HORA</span>\r\n              <p>\r\n                Biblioteca de la FADU <br />\r\n                {date.toLocaleString('es-ES')}\r\n              </p>\r\n            </div>\r\n            <div className=\"main-content\">\r\n              <h1>{title}</h1>\r\n              <span className=\"sub-text\">\r\n                {groupData.class || \"clase x\"} - en {distance}\r\n              </span>\r\n              <p>{description || defaultDescription}</p>\r\n              <div className=\"map\">\r\n                <img\r\n                  alt=\"\"\r\n                  src={require('../../../assets/map.png')}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Pane>\r\n        </Wrapper>\r\n      );\r\n    }\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport default connect([GroupContainer, UserContainer])(DetailsScreen);\r\n","// @flow\r\nimport type {ContainerType} from \"unstated\";\r\nimport styled from \"styled-components\";\r\nimport React, {Component} from \"react\";\r\nimport connect from \"unstated-connect\";\r\nimport {TextInput, Button} from \"evergreen-ui\";\r\nimport UserContainer from \"../container\";\r\n\r\ntype Props = {\r\n  containers: Array<ContainerType>,\r\n};\r\nconst Container = styled.div`\r\n  font-family: \"Open Sans\", sans-serif;\r\n  background: #663dbc;\r\n  width: 100%;\r\n  height: 100vh;\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Section = styled.div`\r\n  background: #192a3a;\r\n  width: 65%;\r\n  height: 50%;\r\n  display: flex;\r\n  -webkit-box-shadow: 0px -1px 44px -2px rgba(0, 0, 0, 0.75);\r\n  -moz-box-shadow: 0px -1px 44px -2px rgba(0, 0, 0, 0.75);\r\n  box-shadow: 0px -1px 44px -2px rgba(0, 0, 0, 0.75);\r\n  border-radius: 6px;\r\n`;\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 50%;\r\n  height: 91%;\r\n  margin: 2em;\r\n`;\r\nconst Presentation = styled.div`\r\n  font-family: \"Open Sans\", sans-serif;\r\n  background: #111c27;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 50%;\r\n  height: 100%;\r\n  border-top-left-radius: 6px;\r\n  border-bottom-left-radius: 6px;\r\n  .logo {\r\n    margin-bottom: 20px;\r\n  }\r\n  h4 {\r\n    margin: 0;\r\n    font-size: 1.6em;\r\n    font-weight: bold;\r\n    color: white;\r\n  }\r\n  p {\r\n    text-align: center;\r\n    color: white;\r\n    max-width: 80%;\r\n    font-size: 20px;\r\n    line-height: 1.3;\r\n  }\r\n`;\r\nclass LoginScreen extends Component {\r\n  props: Props;\r\n\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  login = async e => {\r\n    const {\r\n      containers: [user],\r\n      history,\r\n    } = this.props;\r\n    const {email, password} = this.state;\r\n\r\n    e.preventDefault();\r\n\r\n    await user.login({email, password});\r\n\r\n    history.replace(\"/groups\");\r\n  };\r\n\r\n  render() {\r\n    const {email, password} = this.state;\r\n    const {\r\n      containers: [user],\r\n    } = this.props;\r\n\r\n    return (\r\n      <Container>\r\n        <Section>\r\n          <Presentation>\r\n            <img\r\n              alt=\"\"\r\n              className=\"logo\"\r\n              src={require(\"../../../assets/logo.svg\")}\r\n            />\r\n            <h4>Stoodi</h4>\r\n            <p>Buscá grupos de estudio que estén estudiando lo mismo que vos</p>\r\n          </Presentation>\r\n          <Form onSubmit={this.login}>\r\n            <TextInput\r\n              margin=\"1em\"\r\n              placeholder=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={e => this.setState({email: e.target.value})}\r\n            />\r\n            <TextInput\r\n              margin=\"1em\"\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={e => this.setState({password: e.target.value})}\r\n            />\r\n            <Button\r\n              appearance=\"primary\"\r\n              intent=\"success\"\r\n              margin=\"1em\"\r\n              type=\"submit\"\r\n            >\r\n              Logueate\r\n            </Button>\r\n          </Form>\r\n        </Section>\r\n\r\n        {/* JSON.stringify(user.state) */}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect([UserContainer])(LoginScreen);\r\n","import React from \"react\";\r\nimport {Subscribe} from \"unstated\";\r\n\r\nimport UserContainer from \"../container\";\r\n\r\nconst ProfileScreen = () => (\r\n  <Subscribe to={[UserContainer]}>\r\n    {user => {\r\n      console.log(\"user: \", user);\r\n\r\n      return <div>{`<ProfileScreen />`}</div>;\r\n    }}\r\n  </Subscribe>\r\n);\r\n\r\nexport default ProfileScreen;\r\n","import React, {Component} from \"react\";\r\nimport {BrowserRouter, Switch, Route, Redirect} from \"react-router-dom\";\r\nimport connect from \"unstated-connect\";\r\nimport {Pane} from \"evergreen-ui\";\r\nimport NavBar from \"./ui/NavBar\";\r\n\r\nimport Search from \"./modules/group/screens/Search\";\r\nimport List from \"./modules/group/screens/List\";\r\nimport Create from \"./modules/group/screens/Create\";\r\nimport Details from \"./modules/group/screens/Details\";\r\n\r\nimport Login from \"./modules/user/screens/Login\";\r\nimport Profile from \"./modules/user/screens/Profile\";\r\n\r\nimport UniversityContainer from \"./modules/universities/container\";\r\nimport UserContainer from \"./modules/user/container\";\r\n\r\nclass App extends Component {\r\n  async componentDidMount() {\r\n    const {\r\n      containers: [university, user],\r\n    } = this.props;\r\n\r\n    await university.fetch();\r\n    await user.restore();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route component={Login} path=\"/login\" />\r\n          <Route\r\n            render={({history}) => (\r\n              <Pane width=\"100%\">\r\n                <NavBar history={history} />\r\n                <Switch>\r\n                  <Route exact component={Search} path=\"/groups\" />\r\n                  <Route component={List} path=\"/my-groups\" />\r\n                  <Route component={Create} path=\"/groups/create\" />\r\n                  <Route component={Details} path=\"/groups/:id\" />\r\n                  <Route component={Profile} path=\"/profile\" />\r\n                  <Redirect to=\"/login\" />\r\n                </Switch>\r\n              </Pane>\r\n            )}\r\n          />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect([UniversityContainer, UserContainer])(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const requireAll = ctx =>\r\n  ctx\r\n    .keys()\r\n    .map(ctx)\r\n    .map(m => m.default)\r\n    .filter(Boolean);\r\n\r\nexport default requireAll(\r\n  require.context(\"./modules\", true, /containers\\.js$/)\r\n).map(Container => new Container());\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {Provider} from \"unstated\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport containers from \"./containers\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <Provider inject={containers}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}